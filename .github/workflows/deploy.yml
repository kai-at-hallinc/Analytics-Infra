name: deploy

on:
    workflow_call:
        inputs:
            environmentType:
                required: true
                type: string
                description: 'The environment to deploy to'
            resourceGroupName:
                required: true
                type: string
                description: 'The resource group to deploy to'
            sqlServerAdministratorLogin:
                required: true
                type: string

        secrets:
            AZURE_CLIENT_ID:
                required: true
            AZURE_TENANT_ID:
                required: true
            AZURE_SUBSCRIPTION_ID:
                required: true
            sqlServerAdministratorLoginPassword:
                required: true
jobs:
    validate:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3
        - uses: azure/login@v1
          name: Sign in to Azure
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
        - if: inputs.environmentType != 'Production'
          uses: azure/arm-deploy@v1
          name: run pre-flight validation
          with:
            deploymentName: ${{ github.run_number }}
            resourceGroupName: ${{ inputs.resourceGroupName }}
            template: ./deploy/main.bicep
            parameters: >
              deploy/params.sandbox.json 
              environmentType=${{ inputs.environmentType }}
              sqlServerAdministratorLogin=${{ inputs.sqlServerAdministratorLogin }}
              sqlServerAdministratorLoginPassword=${{ secrets.sqlServerAdministratorLoginPassword }}
            deploymentMode: Validate
            scope: 'resourcegroup'

        - if: inputs.environmentType == 'Production'
          uses: azure/arm-deploy@v1
          name: Run what-if
          with:
            failOnStdErr: false
            resourceGroupName: ${{ inputs.resourceGroupName }}
            template: ./deploy/main.bicep
            parameters: >
              deploy/params.sandbox.json
              environmentType=${{ inputs.environmentType }}
              sqlServerAdministratorLogin=${{ inputs.sqlServerAdministratorLogin }}
              sqlServerAdministratorLoginPassword=${{ secrets.sqlServerAdministratorLoginPassword }}
            additionalArguments: --what-if
            scope: 'resourcegroup'
    
    deploy:
        needs: validate
        environment: ${{ inputs.environmentType }}
        runs-on: ubuntu-latest
        outputs:
            storageAccountName: ${{ steps.deploy.outputs.storageAccountName }}
            storageAccountBlobContainerName: ${{ steps.deploy.outputs.storageAccountBlobContainerName }}
            sqlServerFullyQualifiedDomainName: ${{ steps.deploy.outputs.sqlServerFullyQualifiedDomainName }}
            sqlDatabaseName: ${{ steps.deploy.outputs.sqlDatabaseName }}
        steps:
        - uses: actions/checkout@v3
        - uses: azure/login@v1
          name: login to Azure
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
        - uses: azure/arm-deploy@v1
          id: deploy
          name: deploy bicep file
          with:
            failOnStdErr: false
            deploymentName: ${{ github.run_number }}
            resourceGroupName: ${{ inputs.resourceGroupName }}
            template: ./deploy/main.bicep
            parameters: >
                deploy/params.sandbox.json
                environmentType=${{ inputs.environmentType }}
                sqlServerAdministratorLogin=${{ inputs.sqlServerAdministratorLogin }}
                sqlServerAdministratorLoginPassword=${{ secrets.sqlServerAdministratorLoginPassword }}
            scope: 'resourcegroup'